// üß† Array of Dev Quotes
const quotes = [
  "Code is like humor. When you have to explain it, it‚Äôs bad. ‚Äì Cory House",
  "Experience is the name everyone gives to their mistakes. ‚Äì Oscar Wilde",
  "Java is to JavaScript what car is to Carpet. ‚Äì Chris Heilmann",
  "First, solve the problem. Then, write the code. ‚Äì John Johnson",
  "Any fool can write code that a computer can understand. Good programmers write code that humans can understand. ‚Äì Martin Fowler",
  "Fix the cause, not the symptom. ‚Äì Steve Maguire",
  "Before software can be reusable it first has to be usable. ‚Äì Ralph Johnson",
  "Simplicity is the soul of efficiency. ‚Äì Austin Freeman",
  "Talk is cheap. Show me the code. ‚Äì Linus Torvalds",
  "The best error message is the one that never shows up. ‚Äì Thomas Fuchs"
];

// üìå DOM elements
const quoteText = document.getElementById("quote");
const generateBtn = document.getElementById("generateBtn");
const copyBtn = document.getElementById("copyBtn");
const saveBtn = document.getElementById("saveBtn");
const shareBtn = document.getElementById("shareBtn");
const favoritesList = document.getElementById("favorites");
const shareWrapper = document.querySelector(".share-wrapper");
const customQuoteInput = document.getElementById("customQuoteInput");
const addQuoteBtn = document.getElementById("addQuoteBtn");

// üìÖ Footer Date
const today = new Date();
document.getElementById('footerDate').textContent = today.toLocaleDateString('en-IN', {
  weekday: 'short',
  year: 'numeric',
  month: 'short',
  day: 'numeric'
});

// üîÅ Daily Quote (from localStorage)
const todayKey = new Date().toDateString();
let dailyQuote = localStorage.getItem('dailyQuote');
let quoteDate = localStorage.getItem('quoteDate');

if (quoteDate !== todayKey) {
  const randomQuote = quotes[Math.floor(Math.random() * quotes.length)];
  localStorage.setItem('dailyQuote', randomQuote);
  localStorage.setItem('quoteDate', todayKey);
  dailyQuote = randomQuote;
}
document.getElementById('dailyQuote').textContent = dailyQuote;

// ‚ú® Typewriter effect
function typeWriter(text, i = 0) {
  if (i < text.length) {
    quoteText.textContent += text.charAt(i);
    setTimeout(() => typeWriter(text, i + 1), 40);
  }
}

// üß† Generate New Quote Function
function getRandomQuote() {
  const randomIndex = Math.floor(Math.random() * quotes.length);
  const selectedQuote = quotes[randomIndex];

  quoteText.textContent = "";
  typeWriter(selectedQuote);

  const utterance = new SpeechSynthesisUtterance(selectedQuote);
  speechSynthesis.speak(utterance);
}

// üîò Generate Button
generateBtn.addEventListener("click", getRandomQuote);

// üìã Copy
copyBtn.addEventListener("click", () => {
  navigator.clipboard.writeText(quoteText.textContent);
  copyBtn.textContent = "‚úÖ Copied!";
  setTimeout(() => {
    copyBtn.textContent = "Copy";
  }, 1500);
});

// üíæ Save
saveBtn.addEventListener("click", () => {
  const quote = quoteText.textContent;
  if (quote && !Array.from(favoritesList.children).some(li => li.textContent === quote)) {
    const li = document.createElement("li");
    li.textContent = quote;
    favoritesList.appendChild(li);
  }
});

// üì§ Share
shareBtn.addEventListener("click", () => {
  const quote = quoteText.textContent;
  if (navigator.share) {
    navigator.share({
      title: "Dev Quote",
      text: quote,
      url: window.location.href
    }).catch(err => console.log("error sharing", err));
  } else {
    alert("Sharing not supported on this device.");
  }

  // Toggle optional wrapper
  if (shareWrapper) {
    shareWrapper.classList.toggle("active");
  }
});

const storedQuotes = JSON.parse(localStorage.getItem("userQuotes") || "[]");
quotes.push(...storedQuotes);

addQuoteBtn.addEventListener("click", () => {
  const newQuote = customQuoteInput.value.trim();

  if (newQuote) {
    quotes.push(newQuote); // Add to quotes array
    customQuoteInput.value = ""; // Clear input

     storedQuotes.push(newQuote);
    localStorage.setItem("userQuotes", JSON.stringify(storedQuotes));

    customQuoteInput.value = "";
    typeWriter(newQuote);


    alert("‚úÖ Quote added successfully!");
  } else {
    alert("‚ö†Ô∏è Please write a quote before adding.");
  }
});

// ‚úÖ Auto-run on load
window.onload = () => {
  quoteText.textContent = "Click below to get inspired!";
};
